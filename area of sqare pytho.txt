N = 6

def maximumSubSquare(arr):
	
	dp = [[[-1, -1] for i in range(51)]
					for j in range(51)]


	maxside = [[0 for i in range(51)]
				for j in range(51)]
				
	x = 0
	y = 0
	
	for i in range(N):
		x = 0
		
		for j in range(N):
			if (arr[i][j] == 'X'):
				x += 1
			else:
				x = 0
				
			dp[i][j][0] = x

	for i in range(N):
		for j in range(N):
			if (arr[j][i] == 'X'):
				y += 1
			else:
				y = 0
				
			dp[j][i][1] = y
	
	maxval = 0
	val = 0

	for i in range(N):
		for j in range(N):
			val = min(dp[i][j][0],
					dp[i][j][1])
					
			if (dp[i][j - val + 1][1] >= val and
				dp[i - val + 1][j][0] >= val):
				maxside[i][j] = val
			else:
				maxside[i][j] = 0

			maxval = max(maxval, maxside[i][j])

	return maxval

mat = [ [ 'X', 'O', 'X', 'X', 'X', 'X' ],
		[ 'X', 'O', 'X', 'X', 'O', 'X' ],
		[ 'X', 'X', 'X', 'O', 'O', 'X' ],
		[ 'O', 'X', 'X', 'X', 'X', 'X' ],
		[ 'X', 'X', 'X', 'O', 'X', 'O' ],
		[ 'O', 'O', 'X', 'O', 'O', 'O' ] ]
		

print(maximumSubSquare(mat))


